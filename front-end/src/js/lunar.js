let lastDayYn = Boolean;
let isHolidayCalc = false;

// Ïà´ÏûêÏù∏ÏßÄÎßå Ï≤¥ÌÅ¨
function f_Number(str) {
       for (i=0; i< str.length; i++) {
               ch = str.charAt(i);
               if (ch < "0" || ch > "9") {
                       return false;
               }
       }
       return true;
}
function getHolidays(year){
        let lunarHolidays = [
                {idx:0,date:'1229',name:''},
                {idx:1,date:'1230',name:''},
                {idx:2,date:'0101',name:'üåÑÏÑ§ÎÇ†'},
                {idx:3,date:'0102',name:''},
                {idx:4,date:'0408',name:'üë≤Î∂ÄÏ≤òÎãò Ïò§Ïã† ÎÇ†'},
                {idx:5,date:'0814',name:''},
                {idx:6,date:'0815',name:'üéëÏ∂îÏÑù'},
                {idx:7,date:'0816',name:''}
        ];
        let originHolidays = [
                {idx:0,date:'0101',name:'üåûÏÉàÌï¥'},
                {idx:1,date:'0301',name:'ü§ö‚úãÏÇºÏùºÏ†à'},
                {idx:2,date:'0505',name:'üë¶üëßÏñ¥Î¶∞Ïù¥ÎÇ†'},
                {idx:3,date:'0606',name:'üèÖÌòÑÏ∂©Ïùº'},
                {idx:4,date:'0815',name:'üéáÍ¥ëÎ≥µÏ†à'},
                {idx:5,date:'1003',name:'üêªüêØÍ∞úÏ≤úÏ†à'},
                {idx:6,date:'1009',name:'‚úçÌïúÍ∏ÄÎÇ†'},
                {idx:7,date:'1225',name:'üéÖÌÅ¨Î¶¨Ïä§ÎßàÏä§'}
        ];
        isHolidayCalc = true;
        const mapLunar = lunarHolidays.map(function(item, idx){
                if(idx==0 || idx==1){ // ÏÑ£Îã¨ Í∑∏ÎØêÏù¥ 29ÏùºÏù∏ÏßÄ 30ÏùºÏù∏ÏßÄÏóê Îî∞ÎùºÏÑúÌïòÎÇò ÏÇ≠Ï†ú
                        lastDayYn = true;
                        Resut('entireDate', year-1, item.date, item.name);
                }else{
                        lastDayYn = false;
                        Resut('entireDate', year, item.date, item.name);
                }
        });
        isHolidayCalc = false;
        if(thisHolidays[0].date!==thisHolidays[1].date&&thisHolidays[1].date!==thisHolidays[2].date&&thisHolidays[2].date!==thisHolidays[3].date){ 
                // 1Ïõî Ïó∞Ìú¥Îì§Ïù¥ Î™®Îëê Îã§Î•¥Î©¥ Îß® Ï≤òÏùåÌïòÎÇò ÏÇ≠Ï†ú >> ÏÑ£Îã¨ Í∑∏ÎØêÏù¥ 30ÏùºÏù¥ÎùºÎäî ÎúªÏù¥ÎãàÍπå
                thisHolidays.splice(0, 1)
        }
        const mapOrigin = originHolidays.map(function(item){
                let tempDays = year + item.date;
                let tempObj = {date: tempDays, name: item.name};
                thisHolidays.push(tempObj);
        });
        
}
function Resut(type, inputYear, calDay, holidayName) {

        // ÏùåÎ†• Îç∞Ïù¥ÌÑ∞ (ÌèâÎã¨ - ÏûëÏùÄÎã¨ :1,  ÌÅ∞Îã¨:2 )
        // (Ïú§Îã¨Ïù¥ ÏûàÎäî Îã¨ - ÌèâÎã¨Ïù¥ ÏûëÍ≥† Ïú§Îã¨ÎèÑ ÏûëÏúºÎ©¥ :3 , ÌèâÎã¨Ïù¥ ÏûëÍ≥† Ïú§Îã¨Ïù¥ ÌÅ¨Î©¥ : 4)
        // (Ïú§Îã¨Ïù¥ ÏûàÎäî Îã¨ - ÌèâÎã¨Ïù¥ ÌÅ¨Í≥† Ïú§Îã¨Ïù¥ ÏûëÏúºÎ©¥ :5,  ÌèâÎã¨Í≥º Ïú§Îã¨Ïù¥ Î™®Îëê ÌÅ¨Î©¥ : 6)
        const kk = [[1, 2, 4, 1, 1, 2, 1, 2, 1, 2, 2, 1],   /* 1841 */
         [2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1],
         [2, 2, 2, 1, 2, 1, 4, 1, 2, 1, 2, 1],
         [2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2],
         [1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1],
         [2, 1, 2, 1, 5, 2, 1, 2, 2, 1, 2, 1],
         [2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1],
         [2, 1, 2, 3, 2, 1, 2, 1, 2, 1, 2, 2],
         [2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2],
         [2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 5, 2],   /* 1851 */
         [2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2],
         [2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2],
         [1, 2, 1, 2, 1, 2, 5, 2, 1, 2, 1, 2],
         [1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1],
         [2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2],
         [1, 2, 1, 1, 5, 2, 1, 2, 1, 2, 2, 2],
         [1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2],
         [2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2],
         [2, 1, 6, 1, 1, 2, 1, 1, 2, 1, 2, 2],
         [1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2],   /* 1861 */
         [2, 1, 2, 1, 2, 2, 1, 2, 2, 3, 1, 2],
         [1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2],
         [1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1],
         [2, 1, 1, 2, 4, 1, 2, 2, 1, 2, 2, 1],
         [2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2],
         [1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2],
         [1, 2, 2, 3, 2, 1, 1, 2, 1, 2, 2, 1],
         [2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 2, 2, 1, 2, 1, 2, 1, 1, 5, 2, 1],
         [2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2],   /* 1871 */
         [1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2],
         [1, 1, 2, 1, 2, 4, 2, 1, 2, 2, 1, 2],
         [1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1],
         [2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1],
         [2, 2, 1, 1, 5, 1, 2, 1, 2, 2, 1, 2],
         [2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2],
         [2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 2, 4, 2, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2],
         [1, 2, 1, 2, 1, 2, 5, 2, 2, 1, 2, 1],   /* 1881 */
         [1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2],
         [1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2],
         [2, 1, 1, 2, 3, 2, 1, 2, 2, 1, 2, 2],
         [2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2],
         [2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2],
         [2, 2, 1, 5, 2, 1, 1, 2, 1, 2, 1, 2],
         [2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2],
         [1, 5, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2],
         [1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2],   /* 1891 */
         [1, 1, 2, 1, 1, 5, 2, 2, 1, 2, 2, 2],
         [1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2],
         [1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2],
         [2, 1, 2, 1, 5, 1, 2, 1, 2, 1, 2, 1],
         [2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2],
         [1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1],
         [2, 1, 5, 2, 2, 1, 2, 1, 2, 1, 2, 1],
         [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 2, 5, 2, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1],   /* 1901 */
         [2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2],
         [1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2],
         [2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1],
         [2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2],
         [1, 2, 2, 4, 1, 2, 1, 2, 1, 2, 1, 2],
         [1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1],
         [2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2],
         [1, 5, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1],
         [2, 1, 2, 1, 1, 5, 1, 2, 2, 1, 2, 2],   /* 1911 */
         [2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2],
         [2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2],
         [2, 2, 1, 2, 5, 1, 2, 1, 2, 1, 1, 2],
         [2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2],
         [1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1],
         [2, 3, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1],
         [2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 5, 2, 2, 1, 2, 2],
         [1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2],
         [2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2],   /* 1921 */
         [2, 1, 2, 2, 3, 2, 1, 1, 2, 1, 2, 2],
         [1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2],
         [2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1],
         [2, 1, 2, 5, 2, 1, 2, 2, 1, 2, 1, 2],
         [1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1],
         [2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2],
         [1, 5, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2],
         [1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2],
         [1, 2, 2, 1, 1, 5, 1, 2, 1, 2, 2, 1],
         [2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1],   /* 1931 */
         [2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2],
         [1, 2, 2, 1, 6, 1, 2, 1, 2, 1, 1, 2],
         [1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2],
         [1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1],
         [2, 1, 4, 1, 2, 1, 2, 1, 2, 2, 2, 1],
         [2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1],
         [2, 2, 1, 1, 2, 1, 4, 1, 2, 2, 1, 2],
         [2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2],
         [2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 2, 1, 2, 2, 4, 1, 1, 2, 1, 2, 1],   /* 1941 */
         [2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2],
         [1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2],
         [1, 1, 2, 4, 1, 2, 1, 2, 2, 1, 2, 2],
         [1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2],
         [2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2],
         [2, 5, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2],
         [2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2],
         [2, 2, 1, 2, 1, 2, 3, 2, 1, 2, 1, 2],
         [2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2],   /* 1951 */
         [1, 2, 1, 2, 4, 2, 1, 2, 1, 2, 1, 2],
         [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2],
         [1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2],
         [2, 1, 4, 1, 1, 2, 1, 2, 1, 2, 2, 2],
         [1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2],
         [2, 1, 2, 1, 2, 1, 1, 5, 2, 1, 2, 2],
         [1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2],
         [1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1],
         [2, 1, 2, 1, 2, 5, 2, 1, 2, 1, 2, 1],
         [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2],   /* 1961 */
         [1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1],
         [2, 1, 2, 3, 2, 1, 2, 1, 2, 2, 2, 1],
         [2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2],
         [1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1],
         [2, 2, 5, 2, 1, 1, 2, 1, 1, 2, 2, 1],
         [2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2],
         [1, 2, 2, 1, 2, 1, 5, 2, 1, 2, 1, 2],
         [1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1],
         [2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2],
         [1, 2, 1, 1, 5, 2, 1, 2, 2, 2, 1, 2],   /* 1971 */
         [1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1],
         [2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1],
         [2, 2, 1, 5, 1, 2, 1, 1, 2, 2, 1, 2],
         [2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2],
         [2, 2, 1, 2, 1, 2, 1, 5, 2, 1, 1, 2],
         [2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1],
         [2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1],
         [2, 1, 1, 2, 1, 6, 1, 2, 2, 1, 2, 1],
         [2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2],
         [1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2],   /* 1981 */
         [2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 2],
         [2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2],
         [2, 1, 2, 2, 1, 1, 2, 1, 1, 5, 2, 2],
         [1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2],
         [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1],
         [2, 1, 2, 2, 1, 5, 2, 2, 1, 2, 1, 2],
         [1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1],
         [2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2],
         [1, 2, 1, 1, 5, 1, 2, 1, 2, 2, 2, 2],
         [1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2],   /* 1991 */
         [1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2],
         [1, 2, 5, 2, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2],
         [1, 2, 2, 1, 2, 2, 1, 5, 2, 1, 1, 2],
         [1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2],
         [1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1],
         [2, 1, 1, 2, 3, 2, 2, 1, 2, 2, 2, 1],
         [2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1],
         [2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1],
         [2, 2, 2, 3, 2, 1, 1, 2, 1, 2, 1, 2],   /* 2001 */
         [2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2],
         [1, 5, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2],
         [1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2],
         [1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 2, 2],
         [1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2],
         [2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2],
         [2, 2, 1, 1, 5, 1, 2, 1, 2, 1, 2, 2],
         [2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2],
         [2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1],   /* 2011 */
         [2, 1, 6, 2, 1, 2, 1, 1, 2, 1, 2, 1],
         [2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2],
         [1, 2, 1, 2, 1, 2, 1, 2, 5, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2],
         [1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2],
         [2, 1, 1, 2, 3, 2, 1, 2, 1, 2, 2, 2],
         [1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2],
         [2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2],
         [2, 1, 2, 5, 2, 1, 1, 2, 1, 2, 1, 2],
         [1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1],   /* 2021 */
         [2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2],
         [1, 5, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1],
         [2, 1, 2, 1, 1, 5, 2, 1, 2, 2, 2, 1],
         [2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2],
         [1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2],
         [1, 2, 2, 1, 5, 1, 2, 1, 1, 2, 2, 1],
         [2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2],
         [1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1],
         [2, 1, 5, 2, 1, 2, 2, 1, 2, 1, 2, 1],   /* 2031 */
         [2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 5, 2, 2, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1],
         [2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2],
         [2, 2, 1, 2, 1, 4, 1, 1, 2, 1, 2, 2],
         [2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2],
         [2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1],
         [2, 2, 1, 2, 5, 2, 1, 2, 1, 2, 1, 1],
         [2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1],
         [2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2],   /* 2041 */
         [1, 5, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2],
         [1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2]];

         /* ÏÑ§ÎÇ†ÏùÄ ÏùåÎ†• 1Ïõî 1Ïùº, Ï∂îÏÑù ÏùåÎ†• 8Ïõî 15Ïùº, Î∂ÄÏ≤òÎãòÏò§Ïã†ÎÇ† ÏùåÎ†• 4Ïõî 8Ïùº */
    
        let input_day = inputYear + calDay;

        let gan = new Array("Áî≤","‰πô","‰∏ô","‰∏Å","Êàä","Â∑±","Â∫ö","Ëæõ","Â£¨","Áô∏");
        let jee = new Array("Â≠ê","‰∏ë","ÂØÖ","ÂçØ","Ëæ∞","Â∑≥","Âçà","Êú™","Áî≥","ÈÖâ","Êàå","‰∫•");
        let ddi = new Array("Ï•ê","ÏÜå","Î≤î","ÌÜ†ÎÅº","Ïö©","Î±Ä","Îßê","Ïñë","ÏõêÏà≠Ïù¥","Îã≠","Í∞ú","ÎèºÏßÄ");
        let week = new Array("Ïùº","Ïõî","Ìôî","Ïàò","Î™©","Í∏à","ÌÜ†");

        let md = new Array(31,0,31,30,31,30,31,31,30,31,30,31);

        let year =input_day.substring(0,4);
        let month =input_day.substring(4,6);
        let day =input_day.substring(6,8);
        // ÏùåÎ†•ÏóêÏÑú ÏñëÎ†•ÏúºÎ°ú Î≥ÄÌôò
        let lyear, lmonth, lday, leapyes;
        let syear, smonth, sday;
        let mm, y1, y2, m1;
        let i, j, k1, k2, leap, w;
        let td, y;
        lyear = get_year(year);        // ÎÖÑÎèÑ check
        lmonth = get_month(month);     // Ïõî check

            y1 = lyear - 1841;
            m1 = lmonth - 1;
            leapyes = 0;
            if (kk[y1][m1] > 2)  {
                switch (kk[y1][m1]) {
                        case 1:
                        case 3:
                        case 4:
                                mm = 29;
                                break;
                        case 2:
                        case 5:
                        case 6:
                                mm = 30;
                                break;
                }
            }

            lday = get_day(day, mm);

            td = 0;
            for (i=0; i<y1; i++) {
                for (j=0; j<12; j++) {
                    switch (kk[i][j]) {
                            case 1:
                                    td = td + 29;
                                    break;
                            case 2:
                                    td = td + 30;
                                    break;
                            case 3:
                                    td = td + 58;    // 29+29
                                    break;
                            case 4:
                                    td = td + 59;    // 29+30
                                    break;
                            case 5:
                                    td = td + 59;    // 30+29
                                    break;
                            case 6:
                                    td = td + 60;    // 30+30
                                    break;
                    }
                }
        }
        for (j=0; j<m1; j++) {
            switch (kk[y1][j]) {
                case 1:
                        td = td + 29;
                        break;
                case 2:
                        td = td + 30;
                        break;
                case 3:
                        td = td + 58;    // 29+29
                        break;
                case 4:
                        td = td + 59;    // 29+30
                        break;
                case 5:
                        td = td + 59;    // 30+29
                        break;
                case 6:
                        td = td + 60;    // 30+30
                        break;
                }
            }
            if (leapyes == 1) {
                switch(kk[y1][m1]) {
                        case 3:
                        case 4:
                                td = td + 29;
                                break;
                        case 5:
                        case 6:
                                td = td + 30;
                                break;
                }
            }
            td =  td + parseFloat(lday) + 22;
            // td : 1841 ÎÖÑ 1 Ïõî 1 Ïùº Î∂ÄÌÑ∞ ÏõêÌïòÎäî ÎÇ†ÏßúÍπåÏßÄÏùò Ï†ÑÏ≤¥ ÎÇ†ÏàòÏùò Ìï©
            y1 = 1840;
            do {
                y1 = y1 +1;
                if  ((y1 % 400 == 0) || ((y1 % 100 != 0) && (y1 % 4 == 0))) {
                        y2 = 366;
                }
                else {
                        y2 = 365;
                }
                if (td <= y2) {
                        break;
                }
                else {
                        td = td- y2;
                }
        } while(1);
            syear = y1;
            md[1] = parseInt(y2) -337;
            m1 = 0;
            do {
                m1= m1 + 1;
                if (td <= md[m1-1]) {
                    break;
                }
                else {
                    td = td - md[m1-1];
                }
            } while(1);
            smonth = parseInt(m1);
            sday = parseInt(td);
            y = parseInt(syear -1);
            td = y * 365 + y/4 - y/100 +  y/400;
            for ( i=0; i<smonth-1; i++) {
                td = td + md[i];
            }
            w = td % 7;
            k1 = (parseInt(lyear) + 6) % 10;
            k2 =(parseInt(lyear) + 8) % 12;
            if(smonth < 10){
                smonth = "0"+smonth;
            }
            if(sday < 10){
                sday = "0"+sday;
            }
            if(type=='entireDate'){
                let tempObj = {};
                if(lastDayYn==true){
                        result = (Number(inputYear)+1) +""+ smonth +""+ sday;
                }else{
                        result = inputYear +""+ smonth +""+ sday;
                }
                if(isHolidayCalc){
                        let tempObj = {date: result, name: holidayName};
                        thisHolidays.push(tempObj);
                }
                return result;
            }else if(type=='month'){
                result = smonth + "";
                return result;
            }else if(type=='day'){
                result = sday + "";
                return result;
            }
}
function get_year(src) {
        if ((src < 1841) || (src > 2043 )) {
           alert('Ïó∞ÎèÑ Î≤îÏúÑÎäî 1841 ~ 2043 ÍπåÏßÄÏûÖÎãàÎã§.');
           document.frmTest.input_day.focus();
        }
        else
           return src;
}
function get_month(src) {
        if ((src < 1) || (src > 12 )) {
            alert('Ïõî Î≤îÏúÑÎäî 1 ~ 12 ÍπåÏßÄÏûÖÎãàÎã§.');
            document.frmTest.input_day.focus();
        }
        else
            return src;
}
function get_day(src,day) {
        if ((src < 1) || (src > day )) {
            alert('Ïùº Î≤îÏúÑÍ∞Ä ÌãÄÎ¶ΩÎãàÎã§.');
            document.frmTest.input_day.focus();
        }
        else
            return src;
}
function febdays(src) {
        if ((src%4 !=0) || ((src%100 == 0) && (src%400 !=0))) {
                    return 28;          // Ïú§ÎÖÑÏù¥ ÏïÑÎãò
        }
}
